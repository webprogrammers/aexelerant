<?php 
/**
 * @file - module file for axelerant technology test
 * @author - mehul.webprogrammer@gmail.com
 * @created - 16 FEb 2016
 * @license - open source
 */

/**
 * Implementing hook_form_FORM_ID_alter()
 *   Allows to alter form data of drupal form with form id as FORM_ID
 * @param $form
 *   Array of form element
 * @param $form_state 
 *   Array of form state values
 * @param $form_id
 *   Id of the form element
 */
function my_customizations_form_system_site_information_settings_alter(&$form, &$form_state, $form_id) {
  //Adding additional textfield to add API key
  $form['site_information']['siteapikey'] = array(
    "#type" => "textfield",
    "#title" => t("Site API Key"),
    "#default_value" => variable_get("siteapikey", "No API Key yet"),
    "#weight" => -99,
  );
  //Adding additional submit function to set message when form is submitted
  $form['#submit'][] = 'my_customizations_site_inforamtion_submit';
  //Change the name of the "save configuration" button to "update configuration"
  $form['actions']['submit']['#value'] = t("Update Configuration");
}

/**
 * Implementing hook_form_submit()
 *   Allows to do additional processes on submit of form
 * @param $form
 *   Array of form element
 * @param $form_state 
 *   Array of form state values
 */
function my_customizations_site_inforamtion_submit($form, &$form_state) {
  //Adding message to show the user that which new API key is saved
  drupal_set_message(t("Site API Key has been saved with value '@value'", 
    array("@value" => $form_state['values']['siteapikey'])));	
}

/**
 * Implementing hook_menu()
 *   Allows to create menu items
 * @return array $items
 *   Array of menu items
 */
function my_customizations_menu() {
  $items = array();
  $items['my_customizations'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'my_customizations_api_callback',
    'page arguments' => array(2),
    'access callback' => 'my_cusomizations_api_access_callback',
    'access arguments' => array(1,2),
  );
  return $items;
}

/**
 * Implementing my_cusomizations_api_access_callback()
 *   A custom access callback for the api
 * @param $apikey
 *   API key for API
 * @param $nid
 *   Node id of the node to be loaded
 */
function my_cusomizations_api_access_callback($apikey=NULL, $nid=NULL) {
  if (empty($apikey) || ($apikey == "No API Key yet") || empty($nid)) {
    return FALSE;
  }
  else {
  	$correct_key = variable_get("siteapikey", "No API Key yet");
  	$node_object = node_load($nid);
  	if (($apikey == $correct_key) && !empty($node_object) && ($node_object->type == "page")) {
  	  return TRUE;
  	}
  	else {
  	  return FALSE;
  	}
  }
}

/**
 * Implementing my_customizations_api_callback() 
 *   Custom function to show node json data and dislay access denied page
 * @param $apikey
 *   The site api key
 * @param $nid
 *   Node id to show the data
 */
function my_customizations_api_callback($nid=NULL) {
  if (!empty($nid)) {
  	  $node_object = node_load($nid);
  	  //change page delivery callback type to only return json
  	  $delivery_callback = "drupal_json_output";
      drupal_deliver_page($node_object, $delivery_callback);
  }
  else {
  	//It will never come here due to access callback check, but in case if arrives
  	drupal_access_denied();
  }
}
